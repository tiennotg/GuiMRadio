id: GuiMRadio_RadioDecoder
label: RadioDecoder
category: '[GuiMRadio]'

templates:
  imports: |-
    import GuiMRadio
    from GuiMRadio.RadioDecoder import STANDARD,INVERTED,MANCHESTER,INVERTED_MANCHESTER
  make: GuiMRadio.RadioDecoder(sample_rate=${sample_rate},baud_rate=${baud_rate},encoding=${encoding_type},offset=${input_offset})

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#     * default
parameters:
- id: sample_rate
  label: Sample Rate
  dtype: float
  default: 48000
- id: baud_rate
  label: Baud Rate
  dtype: float
  default: 2000
- id: encoding_type
  label: Encoding
  dtype: enum
  options: [STANDARD,INVERTED,MANCHESTER,INVERTED_MANCHESTER]
  option_labels: [Standard, Inverted, Manchester, Inverted Manchester]
  default: STANDARD
- id: input_offset
  label: Input Offset
  dtype: float
  default: 0
#- id: ...
#  label: ...
#  dtype: ...

#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
- label: in
  domain: stream
  dtype: float
  vlen: 1
  optional: 0

outputs:
- label: out
  domain: stream
  dtype: byte
  vlen: 1
  optional: 0

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
